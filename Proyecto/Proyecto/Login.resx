<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>