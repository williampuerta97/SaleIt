<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAALEAAABqCAYAAADz0LApAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABbaSURBVHhe7Z0HmFTV2ceXpQgiooDYFVGj8uiHOqyxAGLB7mfDgl0HJMZYQizYEmyIUaKosX+W
        GIyKrF0TjF1sBAEVUaNBpIMsIIpS5/v9z33v7Jm7M+wsLAF2z/95fs/Mfc+5Zff+75n3nHPnTknQf1nl
        FaIZtCjAOlazqlLp9nA7fAULYQY8A+fA9tDAagYFrUKVVzSGf8KsApxjNSuVSouDQKbNFOAHGAnXwF7Q
        AmwDQUG1qfKKljAbMnlYDF2sZqVS6Z1gOuQzbz6WwJdwNRRu2YOCVkjlFTt5pk0yF1pazUql0g9DPrNW
        x1LoaVsJCiqsuT13bAZDYWQeHrJqkcorTvBMm2QEWEVTKr0xzDZTimVwA2wIKVBr+zb8CL6BYy6yLQUF
        FRZGbQWTIJOHYVYtUnnFtZ5pkwyyWpVKpc8AGTc25eewvpVGSqUbw9ZwFgyFybAAlCNvYbWCggoLo24G
        cz3j+txq1WRg8bRn2iQ9rGYkjTak0i+B37LeYqX5FXUCW0EHaGHRoKDlC6NuB0s94/pUfpxr+Ky8Ypxn
        Wp8f4BdWM1IqvQksAt/Eu1tpUJ2XeuWp9CDQmOqkGvAFlGoTt4zo0gamwnd5GOz2gzDqngnj+hxj1WTi
        LeA7M22S8dDUakZKpc8H38BjobGVBtV5pdLHeSe/JqiDtJ42gVE3gh8hk4d73H4QRj0yYVyfypazvOKX
        sNRMm+RvVitSlOe+accUo06cVQiq+0ql+3onvyb8BG21CYzaGuZ5xvW5w+0HYdR0wrgxC2BLqyYTn50w
        rs8FVitSKr2DHUt8XD/DzlYaVC+USp/sGaAmyCzbaBMYtRXM9ozrkx1JwKiXe8b1+RZaWTWZ+NaEcX06
        Wa1IqfSV3jGJ98EKg+qHUumungGEct2tiqSRNoFRN4AZnnF9Brr9IIx6q2dcn9FQOWMWTTfnM/BM2MBq
        6dibwGjwjz+3pQ6qB0qlt02YQBMGVlicMGpLmOIZ1+c6qyYTD/GM6/MyRJXKKxrBZDNtktegYVQRpdJ7
        gD4R4mOfC9tZaVC9kSYEco2gCYN1rdTpxi53PwzPJ3gWdlU5Rl0fJnrG9fm92wjCqMM94/rca1Vk4m1g
        vpk2yU1WK1IqPdA7bjEc3IhJUH1SKt0MJpoJYnLGYTHrOMgkWAZHqhyjrgdfe8b1udxtBGHWsQnzxmTr
        YNTukG9kYhkcZbV03I1ggnfM4kwrDapXioaoPvSMIPazUifM+rZnXp+TVI5Rm8MXnnF9LlYdjNoYJnrG
        9TlFdZzKKy70jOujO9c2s1o67m6gu9DiY66ATaw0qF4pmrJ93owQc6qVOmFWpQ75TNxL5Rh1XRjnGdfn
        QtXBqK1hhmdcn86qg0nF/WbaJF+Bq8bx6Zjv8o5X6F6IkErUW6XS93hmEJdZiRNmfShh3hg3VYxRm8JY
        z7g+56oORt0GCt03sZXqYNJS0B1q+Uz8qKsjaZIlmjWMj1d5/PFWGlQvlUpf5RlC3GklTph1UMK8MVep
        HKOuA6M84/q41hqj7go/e8aN+Qmi4bXyiiYwxzOuj7sYnFLpIxLHq1SimZUG1UupQ5RriqfBCp2Jr0yY
        N+ZGlWPUxvCBZ1yfM1QHo3aDZWZcn3+DG2/GqO0Txo1ZCHu4OlEqMcSOM+ZBVxZUj5VKHwz6dkNsinch
        MhbCrOcmzBvjppQxaiMY4RnX52TVwag9POP6vA5RLqvRh/wmngbRJEd08/s0O06hzt2hriyoHiuV7gj+
        rYz63pm7uUfCrCcmzBvjvo2BURvCm55xfVyuilF/7RnX5y+gKjLxlZ5xfV6NKiB9jajyOIWG2bLHGlRf
        FbVu+oZDbAzlmG2sVCbunjBvzFCVY9QG8KpnXB83totRr/GM65Od0cOsTyTMG1NZJ5V+wTtOcZuVBNVr
        pdINQcaNjaHUop2VysRloMmNpIlfBBlYRv6HZ1yfw7QNzHpXwrwxvd1OohvhP/KM63O4q5NKbwmaWo6P
        U6nE3q4sKAgzfOaZQ+xlJTJxB1hgxvV5Hdy9DJj1hYR5Y7qrHLM+lTCvUEfvEJVj1Lag50kkDawpaN1s
        pGPsA/736D6BnCnyoPqs6L4D38TZcVeM2g4qzLg+H4D7BgVmLU+YN6abyjHrW555YzTk1lHlGLUjaGo5
        aeIx0JTjKYU3vOMTlWlGUBCGeDBhkN9aiUy8EUw14/p8Am6MF7M+kTBvzD4qx6yfe+aNmQcbqxyjnuoZ
        1+dB0PG1A3+aWSlPB7duUJCTWrVcE2e/LYxRm8MEM67PV+AmGTDrXxPmjSnDqDJxhRnXZypEt1aWVwz0
        jOsT5cyp9KWJ49PX7LPDgEFBMonyTd8kT4JuOm94WefBpZj1M8+8MWqdm2t1zPpgwrwxmqnTQ1MWmXF9
        Rrp9S+UVLyTMG7MLx6Avs+obG/7xXWprBgWZUunDEyZRB+o7+AAe22/Pq8afvPeA78/fZ9D3/bvcORvz
        Loa54J7ZgFnvTZhXLIOdMeuWsMQzb8xTbt/RwwN1g0/SwOroycDJcWwNB4ab34MS0nMaUunFZpKClKZ6
        LWmS6r24eac+P29VduGUhqlejxC/4tibjnzu4qcOXHjdK93m3/xOl4Vm4iXQAbPuDvmeNxF9/668YmvI
        d8/Ey6Bp5uv9YwB18MLjWYMSip5Zpu/X+WapEaVlZy9p3vXMH9scctqiHU7pOadL3+NmtDnk9OvSBxx+
        +Sc9Os6beOLOi747aaeFmDe+h8LdpolRu0K+G+H7s12NTIzz9wN93HpBQVUUtcaPgh4+ouf4+mOyK8uy
        lmVnzO+wd8+5B3c9dsFvux8847B9j7mD+EEld4zuWzJstm7y8Q0sUx9KeWfwUwlNymQnYoKCCisal9UM
        2f6gTt8t8CyMAeXKtWnwTEnZOT+VHNRvaknPP80pOf+vs0r6D/+m5NgBJ1D2UKKujsEOMiiopopug9RD
        +JR66FvSh4AeIaWfFngZxoOe0p58LtqKorFgf2xYhOcIB62AoiEu/d7Fa6A73F4Htc5NrEakqN6moGGx
        /4WLQd8a0XrfwjzQb2j4pqwJsyB7Y1JQUHGK0orHIZk+aPlvUNyD+6Lt6OmVnaAHXAFKFfTga90fXEx6
        onw9jEoE1VCp9Nng3zCfxH39aIUU3dSjFEV30SlFKYNTQKMS+vaGbs7X4wQ0LvwxbG9rBgUVqchg+ums
        fOaNeQ5shSIVbVcph1KS38NRUPl4KikyuJ4t0RLUgruZwaCgmil6JsW/IJ95Y0ZB5aOlqlNkTP381nxI
        bmc3qxUUVEuKWsPklzKTPG61i1PVL6X6aHQj/PRAUC0rlT4A/Ge1+Wik4UCrWb2i2TdNpOTbVsxZVjso
        qJYU5a+XQ/LjXzN6/aD4p+6k0puB//WiKjTao/fgKVOmrAPNpk2b1mzq1Kl635jXRpMmTSqdM2eObSwo
        qCaKjLwn6HfhdIvmANgLYzXAaI14bQotMVs7XneD/eBYOBv6wrVwx6iPxw9ts/8Fy50IOW/AwzOpOwY+
        gU9hLHwEI+F9GAFvwCvwEjwLw2AI3AUD4BLoDcdDd+gE20Fr0LE2nj59emkmk7E/MKjeCMM2wQB7Qhpu
        gxdhNMyApZBZHpMnT8kc+ptBec0rGpb1zjz76vt5161F5oAujuFwH5wHuuiq/kJpUN0RLWxDTvL1MBkW
        Qz5zFMW7oz7N0BpXMXBpp16ZdP/7M1Om5F9vFbMEKmAIF2oYyquLwsSlnODTQB/hs2AR5DNDUbz14ceu
        RW574EWZlvuel9nuqMsyN9z3dGbCN9/mrb+KiQ38IVzG3xp+qLyuixO9EZSBTH0dPAKvwZcwGxaCWmuZ
        QynGMshnnsyXX03IkCdnJpFm5CtfCbRP7VvHoGPRRTcXJsA78BjcBH2gM2yhTqP9iUH1XZhBHb1W0B7i
        Tt7RcCZcBP3galBn70a4BQaDOmX3w8OgTtqThgynC+UBuBtuh0EwEHQR/QGuAHUglasfBweCOnPbQ9uZ
        M2c2CZ24oKCgoKCgoKCgoKCgoKCgoKCgoKCgoDqmBmW9REtoBzvCtrAxhCdNBq3ZwqQNoAyGwH9gASyD
        RTAD3oFeUOtPYGeb+8NjcN+q2H4+sZ8mtk9Roy+1Ur8ZPARPQ3gK55ogTkQpXA4/QaYaRsDWtmqtiO31
        tm1XwH/l1kf2IyPGf9N9Fs6KmC7oE2B/C2VFrAVMB607zMJBq1OcCLWwi+2kfAwXwl6gdCIFZ8KroJZZ
        dUZBrd2ayLbWRBP/n5WNsFBWxIKJ1yRxEprCt3ZClDLkNRHxdeBGWAoy83lWtNJiW8HEQSsuTsI+sARk
        ziMtnFeUy/CjQSfvNSj4lXzKhNKUhqB820qqirKiTUy5tlXtNqsT6wYT1xVxEk60k7EQUhYuKOood54G
        H0FTC2dFbAOQKdVBfBPehRfhesj7gzDEl2tiYkKjJf3gWdAnxstwDazQ039YL6+Jea+LWsejfajsK1s+
        DVynk9dg4jVJnISjIc51L7BwQVGnMTSHdcGikVjeA76EeHtJfgAZIue5aRZTeRUTs6xW91yYC8ntiXmg
        nL5GN69Tv5CJ/+zFfWbCplZHf7suZMVr9nyNoNoXJ2Fr+NFOiEw2CDpCjTpu1N8QPgNtR0ZOw27QCc6D
        r0Fl8yGn9WQ5r4l5L/qAPiVUrk7npXA8XAAaKdEFo/ITbLWiRP1CJj4GbgHtS2VTbLk/rG91lMpMAJXf
        41YMWr3iRAwE5cTxSVWOPB4eBplRoxRqEW2NqqLsJJCh1DL+wsJZEZOZdZFo++db2InlQiZuD7OsTClJ
        znPZWJYRH7dyXSStraha2bpaT9QoJ5aIK51S+Q0WClqd4kTIoPpIVgsan9gkU0EnthtU6dAR07CcTuwd
        FsoRcX0Exy31zRZ2YrmQia+1uC6MTSycI+KbQjy+fYaFqxV1V9bE/7Ty31koaHWLkyGU6x4IN8HboJm6
        ZH6rGbyh0MpWdWK5EWgYrsr0NDHNjnWGOaBt/MmKnFguZOKRFn/SQlVEmUZAlFao3iMWrlbUXVkTP2nl
        4fFaa6o4OTKHWjm1vH+ADyDOTYWma3NaZJaVK7aFI0EjCffA32EcfA/xutWamFd9OmjqW3GNRKilL0Q8
        7Pee22ARou7Kmlh/my7woywUtKaLkyWD7gufg06u8uadrFjlGkO+AWTE2BwxqjsW4rJiTNwK1Or726mO
        8W6DRYi6K2viAaC/y/3QetBqEidAxlMrq553tWPEEvV0s06cYmQ/Snl/l8WEct8/gu49cCMdoFRjDKi8
        GBPrTrrYxMNB49PVcY7bYBGi7sqa+Heg4+tooaDVIU7AehC3jtdbeLminobkNEymddyPJvK6CcSphtIM
        bdfVj8WyLph42KoYEyudiceG73YVa1Fsc2VNrMkPjZxsZaGg1SFOgCYuNKOmk6W81Y2DLk/U0VCZPka1
        jvvZLV6727LYz1VMiLjy63iWq9iOXTwCoJY972QGceXOuoVTt0WeaOFqRd2VNbEuVA0BFv80/KBVI06C
        OkZKD8SjUPB+XpXBM6CTq2GtLSx+gMXESa6yJ2Iy2mCvTrEm1hi1jktj2EpNrKRSxHqA1tUnwT4WrlbU
        rc7ED1jZuxbKipj6BzLx+tDMwkGrSzoJEA9RCY0VK7/UqMQusDPofoLz4RNQHRlLnTg3fcyrZuviiQy1
        mmqtlQcrrls61Uoqf4xTjnJoDW44jtdCJpZR4k8KjW5cAjuARkA6wO8hTm005FX0t0+oW52JNcyoMqU0
        msXT/8L9rBmv+rsmg/6ep9wKQatXnIjNQTNicZog1PqptdUwlx9X7HbIeUokyzJ+fE+yprE1Xav0QSda
        61wHGpZSubY3EdzMHq95TSypDuj+5Xj/Mq1y0XiqXBeU7nXe2FYpStSvzsS6pyT+u7UPmTa+d0Im1r0U
        KnvGrRC0+sXJ0OiBWpwXQCb5GdR6Cr3XSVOnbT+okp8S02TH6aAJCrXKMpnWGQZdQR01dQA1UaLZPxlz
        S1tXEyyq9whUSWeIabhN484aD5aJdWFpFu89+A3U+AZ91tEEjPYpfmXhrKxcqdYboFEVtfQbWpk+IfT1
        JK17mVshaM0SJ0YncBvQDTxCHZiiPqqpJ+JUotY7PWxTF5tSkfC84KCgoKCgoKCgoKCgoKCgoKCgoKCg
        oKCgoKCgoKCgoKA1WoPe7doU2kALCwUFrXphuEbwADwD7SxcRZTtDs/DHy2UI+Lazl/gG/ilhWtNbPN6
        236NbgSi/hYwDPpYKKguihP8Z8jABWDRSikGN1udSyycI+LHwTzoCRatPbHNV2Ay1OjJ8tTfEX6AwRYK
        qoviBO8Di+FNqHILJrF14N/wPWxn4ayIlcKNcKqFal1sO5g4qLA4wc1gNMjI7S2cFTGZXK3wi5BzgzzL
        jaEjHA77woZgpZFY3hjcc9N4bQeHwgHQFlwdX8RaQldQvW1UB/KamOUWsBccAWWQk26wXNDExDYDHcdh
        oHo1etJm0BomTuCVIKPmPGuMZXGblZ1iYSeWtweZ6yfQBbAElBMfDdnHufJ+DAyFvjAHlsIymARHWDUn
        lmWqL0B1tL0KuBRehayJeW0Ah8B40L7FIhgB2Ye88L6KiXnfBK6CmaB1fgbVeQLyPgMuaC0QJ29b0Al9
        B9wXJCXeq6X7HL4D93UdifetYCwoxbgIOoFazvcslu3c8V7GlnllwjNhb5ChF4DSFLddXnUM02AKnAZ7
        QC+LxevHJlbrOxdk+B6QgtNhBnwMccufY2JeRT/QRaQOn47lf0AdR5lZF2X27w9ai8SJa2gnUMbKPuGd
        991AreKD4Leul1g853v1LG8OMs1zEMdkYl0gh7sA4r1aUm1T29jVYjeBWtRk66zOouo5E4Niw2E+ZFtd
        ieUTQS24e5wsr0kT6/hmwb8g58n3LA8C7edYCwWtbeLknQVqofpZSDGNXMgUB1jIieW3QC2k8loZ0uc1
        mAruSZq8ysRKHXJaOJZ1IShNcc+P4PVD0DZznsDJsjqWsyE2sXJstcwvgTqV/r51PEpBnrd1kybWKIr2
        6Z5m5IvYzqCLTUOOFg1aq8SJaw0yx0hQy9wcJsDX0MSqObGsj3yd8C9BH+k+Sic03OZGMniViUe5FT0R
        uxB8E2tf/4EqHSxiH0BsYo1Z66M/Tid8dDy66MbYekkTK43RhVrlR3eIbQJKR/4BoZO3toqTNwSUUuwC
        3UEf71Wejk5sOqh1VAfpijxcDH5L/KFb0ROxpInHgYycb5jvDYhNrPx7Iehiy7dv4R42yGvSxPE+j9Gy
        L2IarVDurxY+53dGgtYicfLUOVNeKHPeCzJ0lSdBEnsflFtuZqGsiO0K6pS51ozXYk38JOiTIOcXTFlW
        yqBtxCbWLJxa+jesSlbENPKgIcEdbDlpYl2Y2md/Lfsipk6e/vacx24FrWXiBGo0QiMGn4KGoDRaka9l
        lMn1sdzXQk4stwcZsRziWLEmjjtl2nZcRyQ7dsp91TLrAtPYsF9XoxpKNX5tsaSJNY6tlGMibK6YxHvl
        3U+DWvi9LRy0toqTGE8xi7y/JEp8I9D474+gzp86hRprVjqgNKPMqqpusSbWpMvfQePOt4MMORC0PeXg
        zsRWtzOoA6cO49Wg/Q8GjVho5CFOZXJMLPFenTvtQ+mLcmQN42m/Sp3uhJAPr+3iJCoflkHVmaqSLsSi
        bEt4CNSRkxnV0Xsd9gSr5eq9DENsMStip4DGmnezkGLqXOqiiLepUY5fwbWgIcDssBjvlTZoEkTmU12t
        o2E7v4XVjJ9Sn+zjp3ivlvxg0N+nFl7r6kKToev4k4ZKSv4fVv4zfHYCQVAAAAAASUVORK5CYII=
</value>
  </data>
</root>